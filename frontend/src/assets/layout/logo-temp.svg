<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   width="809.50049"
   height="240.66434"
   viewBox="0 0 214.18036 63.675772"
   version="1.1"
   id="svg8"
   inkscape:version="1.2.2 (b0a8486541, 2022-12-01)"
   sodipodi:docname="the-colorizer-logo-temp.svg"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg"
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   xmlns:cc="http://creativecommons.org/ns#"
   xmlns:dc="http://purl.org/dc/elements/1.1/">
  <defs
     id="defs2">
    <rect
       x="445.42047"
       y="509.76694"
       width="489.03308"
       height="48.617325"
       id="rect5108" />
    <rect
       x="149.44167"
       y="140.74001"
       width="194.84167"
       height="16.268333"
       id="rect1002" />
    <rect
       x="137.58333"
       y="66.901787"
       width="160.93053"
       height="48.400433"
       id="rect971" />
    <rect
       x="137.9613"
       y="75.217262"
       width="139.47321"
       height="65.76786"
       id="rect965" />
  </defs>
  <sodipodi:namedview
     id="base"
     pagecolor="#ffffff"
     bordercolor="#666666"
     borderopacity="1.0"
     inkscape:pageopacity="0.0"
     inkscape:pageshadow="2"
     inkscape:zoom="0.69933921"
     inkscape:cx="323.1622"
     inkscape:cy="147.28189"
     inkscape:document-units="mm"
     inkscape:current-layer="layer1"
     inkscape:document-rotation="0"
     showgrid="false"
     showguides="false"
     inkscape:window-width="1848"
     inkscape:window-height="989"
     inkscape:window-x="0"
     inkscape:window-y="0"
     inkscape:window-maximized="1"
     inkscape:pagecheckerboard="true"
     width="720mm"
     units="px"
     inkscape:showpageshadow="2"
     inkscape:deskcolor="#d1d1d1">
    <inkscape:grid
       type="xygrid"
       id="grid39"
       originx="-7.7664774"
       originy="-7.4113827" />
  </sodipodi:namedview>
  <metadata
     id="metadata5">
    <rdf:RDF>
      <cc:Work
         rdf:about="">
        <dc:format>image/svg+xml</dc:format>
        <dc:type
           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
      </cc:Work>
    </rdf:RDF>
  </metadata>
  <g
     inkscape:label="Layer 1"
     inkscape:groupmode="layer"
     id="layer1"
     style="display:inline"
     transform="translate(-7.7664765,-7.4113827)">
    <text
       xml:space="preserve"
       id="text963"
       style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:25.4px;line-height:1.25;font-family:Trueno;-inkscape-font-specification:Trueno;white-space:pre;shape-inside:url(#rect965);fill:#000000;fill-opacity:1;stroke:none" />
    <g
       aria-label="THE
COLORIZER"
       transform="matrix(1.5460057,0,0,1.5460057,-202.44307,-95.691344)"
       id="text969"
       style="font-size:22.5778px;white-space:pre;stroke:#ffffff;stroke-width:3.5;paint-order:markers stroke fill">
      <g
         id="path16275">
        <path
           style="color:#000000;-inkscape-font-specification:'Trueno, Ultra-Bold';fill:#ffffff;stroke:none;-inkscape-stroke:none"
           d="M 135.96875,66.689453 V 73.9375 h 1.75 2.83398 v 12.080078 h 8.21875 V 73.9375 h 4.60547 v -7.248047 z m 3.5,3.5 h 10.4082 V 70.4375 h -4.60547 v 12.080078 h -1.21875 V 70.4375 h -4.58398 z"
           id="path16302" />
        <path
           style="color:#000000;-inkscape-font-specification:'Trueno, Ultra-Bold';fill:#000000;stroke:none;-inkscape-stroke:none"
           d="m 137.71945,72.18766 h 4.58329 v 12.079124 h 4.71877 V 72.18766 h 4.60587 v -3.747914 h -13.90793 z"
           id="path16304" />
      </g>
      <g
         id="path16277">
        <path
           style="color:#000000;-inkscape-font-specification:'Trueno, Ultra-Bold';fill:#ffffff;stroke:none;-inkscape-stroke:none"
           d="m 151.3457,66.689453 v 19.328125 h 1.75 6.44532 v -5.894531 h 2.12109 v 5.894531 h 8.19726 V 66.689453 h -8.19726 v 6.298828 h -2.12109 v -6.298828 z m 3.5,3.5 h 1.19532 v 6.298828 h 9.12109 v -6.298828 h 1.19726 v 12.328125 h -1.19726 v -5.894531 h -9.12109 v 5.894531 h -1.19532 z"
           id="path16308" />
        <path
           style="color:#000000;-inkscape-font-specification:'Trueno, Ultra-Bold';fill:#000000;stroke:none;-inkscape-stroke:none"
           d="m 153.09494,84.266784 h 4.69618 v -5.892806 h 5.62187 v 5.892806 h 4.69619 V 68.439746 h -4.69619 v 6.299206 h -5.62187 v -6.299206 h -4.69618 z"
           id="path16310" />
      </g>
      <g
         id="path16279">
        <path
           style="color:#000000;-inkscape-font-specification:'Trueno, Ultra-Bold';fill:#ffffff;stroke:none;-inkscape-stroke:none"
           d="m 169.02344,66.689453 v 19.328125 h 1.75 14.91211 v -7.113281 h -0.99219 v -5.101563 h 0.76758 v -7.113281 z m 3.5,3.5 h 9.4375 v 0.113281 h -8.24219 v 5.982422 h 7.47461 v 0.113281 h -7.47461 v 6.00586 h 8.4668 v 0.113281 h -9.66211 z"
           id="path16314" />
        <path
           style="color:#000000;-inkscape-font-specification:'Trueno, Ultra-Bold';fill:#000000;stroke:none;-inkscape-stroke:none"
           d="m 170.77338,84.266784 h 13.16286 v -3.612448 h -8.46668 V 78.1482 h 7.47325 v -3.612448 h -7.47325 v -2.483558 h 8.2409 v -3.612448 h -12.93708 z"
           id="path16316" />
      </g>
      <g
         id="path16281">
        <path
           style="color:#000000;-inkscape-font-specification:'Trueno, Ultra-Bold';fill:#ffffff;stroke:none;-inkscape-stroke:none"
           d="m 146.52539,88.210937 c -5.7112,0 -10.26172,4.244727 -10.26172,9.765625 0,5.558468 4.45095,9.900388 10.10352,9.900388 2.97658,0 5.92964,-1.38626 7.98828,-3.60742 l 1.10937,-1.19726 -4.63672,-4.945317 4.58399,-5.423828 -1.06055,-1.136719 c -1.98442,-2.124159 -4.90462,-3.355469 -7.82617,-3.355469 z m 0,3.5 c 1.36325,0 2.77729,0.596912 3.98047,1.376954 l -0.34961,0.414062 c -1.05457,-0.791253 -2.22294,-1.384766 -3.56445,-1.384766 -3.0905,0 -5.51953,2.673405 -5.51953,5.814454 0,3.141049 2.41674,5.835939 5.51953,5.835939 1.29869,0 2.46451,-0.5416 3.54297,-1.26367 l 0.3125,0.33398 c -1.28123,0.87955 -2.74702,1.53906 -4.08008,1.53906 -3.96556,0 -6.60352,-2.61165 -6.60352,-6.400388 0,-3.690834 2.67417,-6.265625 6.76172,-6.265625 z m 0.0664,3.90625 c 0.56525,0 1.68704,0.531199 2.39453,1.431641 l 0.89258,1.134766 -0.76563,0.78125 c -0.79759,0.814211 -1.99364,1.302736 -2.52148,1.302736 -1.187,0 -2.01953,-0.825965 -2.01953,-2.335939 0,-1.509975 0.82025,-2.314454 2.01953,-2.314454 z"
           id="path16320" />
        <path
           style="color:#000000;-inkscape-font-specification:'Trueno, Ultra-Bold';fill:#003380;stroke:none;-inkscape-stroke:none"
           d="m 138.01296,97.976441 c 0,4.673609 3.54472,8.150589 8.35379,8.150589 2.39325,0 4.98969,-1.19663 6.70561,-3.04801 l -2.70934,-2.88995 c -1.08373,1.10631 -2.55129,1.8288 -3.77049,1.8288 -2.14489,0 -3.7705,-1.76107 -3.7705,-4.086584 0,-2.325514 1.62561,-4.064004 3.7705,-4.064004 1.30951,0 2.77707,0.835378 3.77049,2.099735 l 2.70934,-3.206048 c -1.60303,-1.715912 -4.15432,-2.799647 -6.54757,-2.799647 -4.89938,0 -8.51183,3.409248 -8.51183,8.015119 z"
           id="path16322" />
      </g>
      <g
         id="path16283">
        <path
           style="color:#000000;-inkscape-font-specification:'Trueno, Ultra-Bold';fill:#ffffff;stroke:none;-inkscape-stroke:none"
           d="m 162.2168,88.210937 c -5.76257,0 -10.375,4.218614 -10.375,9.78711 0,5.586643 4.59652,9.878903 10.375,9.878903 5.78377,0 10.375,-4.3104 10.375,-9.878903 0,-5.550396 -4.60714,-9.78711 -10.375,-9.78711 z m 0,3.5 c 4.16634,0 6.875,2.580617 6.875,6.28711 0,3.733553 -2.72456,6.378903 -6.875,6.378903 -4.15575,0 -6.875,-2.61835 -6.875,-6.378903 0,-3.733549 2.70333,-6.287109 6.875,-6.28711 z m 0.0664,0.429688 c -3.06568,0 -5.63281,2.618122 -5.63281,5.880859 0,3.273746 2.55384,5.927736 5.63281,5.927736 3.07897,0 5.49805,-2.72003 5.49805,-5.927736 0,-3.20771 -2.44444,-5.880859 -5.49805,-5.880859 z m 0,3.5 c 1.10071,0 1.99805,0.802081 1.99805,2.380859 0,1.578774 -0.9227,2.427736 -1.99805,2.427736 -1.07534,0 -2.13281,-0.914997 -2.13281,-2.427736 0,-1.523751 0.99902,-2.380859 2.13281,-2.380859 z"
           id="path16326" />
        <path
           style="color:#000000;-inkscape-font-specification:'Trueno, Ultra-Bold';fill:#0000aa;stroke:none;-inkscape-stroke:none"
           d="m 153.59166,97.999019 c 0,4.673601 3.6576,8.128011 8.62472,8.128011 4.96711,0 8.62472,-3.47698 8.62472,-8.128011 0,-4.628449 -3.65761,-8.037697 -8.62472,-8.037697 -4.96712,0 -8.62472,3.38667 -8.62472,8.037697 z m 4.80907,0.02258 c 0,-2.393247 1.78364,-4.131737 3.88338,-4.131737 2.07716,0 3.74792,1.73849 3.74792,4.131737 0,2.393241 -1.67076,4.176891 -3.74792,4.176891 -2.07716,0 -3.88338,-1.78365 -3.88338,-4.176891 z"
           id="path16328" />
      </g>
      <g
         id="path16285">
        <path
           style="color:#000000;-inkscape-font-specification:'Trueno, Ultra-Bold';fill:#ffffff;stroke:none;-inkscape-stroke:none"
           d="m 170.85156,88.347656 v 19.326174 h 1.75 13.08399 v -7.42774 h -6.63672 V 88.347656 Z m 3.5,3.5 h 1.19727 v 11.898434 h 6.63672 v 0.42774 h -7.83399 z"
           id="path16332" />
        <path
           style="color:#000000;-inkscape-font-specification:'Trueno, Ultra-Bold';fill:#330080;stroke:none;-inkscape-stroke:none"
           d="m 172.60217,105.92383 h 11.33405 v -3.92854 h -6.63787 V 90.096789 h -4.69618 z"
           id="path16334" />
      </g>
      <g
         id="path16287">
        <path
           style="color:#000000;fill:#ffffff;stroke:none;-inkscape-stroke:none"
           d="m 193.2832,88.210937 c -5.76257,0 -10.375,4.218614 -10.375,9.78711 0,5.586643 4.59652,9.878903 10.375,9.878903 5.78378,0 10.375,-4.3104 10.375,-9.878903 0,-5.550394 -4.60713,-9.78711 -10.375,-9.78711 z m 0,3.5 c 4.16636,0 6.875,2.580615 6.875,6.28711 0,3.733553 -2.72455,6.378903 -6.875,6.378903 -4.15575,0 -6.875,-2.61835 -6.875,-6.378903 0,-3.733549 2.70334,-6.287109 6.875,-6.28711 z m 0.0684,0.429688 c -3.06568,0 -5.63476,2.618117 -5.63476,5.880859 0,3.273746 2.55579,5.927736 5.63476,5.927736 3.07897,0 5.49805,-2.72003 5.49805,-5.927736 0,-3.20771 -2.44444,-5.880859 -5.49805,-5.880859 z m 0,3.5 c 1.10071,0 1.99805,0.802081 1.99805,2.380859 0,1.578774 -0.9227,2.427736 -1.99805,2.427736 -1.07534,0 -2.13476,-0.914997 -2.13476,-2.427736 0,-1.523746 1.00099,-2.380859 2.13476,-2.380859 z"
           id="path16338" />
        <path
           style="color:#000000;fill:#550022;stroke:none;-inkscape-stroke:none"
           d="m 184.6587,97.999019 c 0,4.673601 3.6576,8.128011 8.62472,8.128011 4.96712,0 8.62472,-3.47698 8.62472,-8.128011 0,-4.628449 -3.6576,-8.037697 -8.62472,-8.037697 -4.96712,0 -8.62472,3.38667 -8.62472,8.037697 z m 4.80907,0.02258 c 0,-2.393247 1.78365,-4.131737 3.88338,-4.131737 2.07716,0 3.74792,1.73849 3.74792,4.131737 0,2.393241 -1.67076,4.176891 -3.74792,4.176891 -2.07716,0 -3.88338,-1.78365 -3.88338,-4.176891 z"
           id="path16340" />
      </g>
      <g
         id="path16289">
        <path
           style="color:#000000;fill:#ffffff;stroke:none;-inkscape-stroke:none"
           d="m 201.91992,88.347656 v 19.326174 h 1.75 6.44531 v -3.54492 l 1.74414,3.54492 h 9.5625 l -4.04101,-6.51758 c 1.34508,-1.36511 2.10351,-3.297271 2.10351,-5.4375 0,-2.191159 -0.82363,-4.196281 -2.375,-5.498047 -1.55136,-1.301765 -3.65507,-1.873047 -6.05664,-1.873047 z m 3.5,3.5 h 5.63281 c 1.84306,0 3.07961,0.442987 3.8086,1.054688 0.72899,0.611701 1.12305,1.417698 1.12304,2.816406 0,1.876935 -0.58815,2.839996 -1.77539,3.511719 l -1.58593,0.896481 2.50976,4.04688 h -1.0957 l -2.09961,-4.26758 h -5.32227 v 4.26758 h -1.19531 z m 1.19531,0.111328 v 7.835938 h 1.75 2.6875 c 1.01981,0 2.08184,-0.306152 2.85352,-1.060547 0.77168,-0.754395 1.10938,-1.836322 1.10937,-2.880859 0,-1.032888 -0.34808,-2.107328 -1.11914,-2.84961 -0.77105,-0.742282 -1.82394,-1.044922 -2.84375,-1.044922 z m 3.5,3.5 h 0.9375 c 0.38002,0 0.43072,0.08056 0.41602,0.06641 -0.0147,-0.01415 0.0469,-0.01623 0.0469,0.328125 0,0.377863 -0.07,0.391926 -0.0547,0.376953 0.0153,-0.01497 -0.0282,0.06445 -0.40821,0.06445 h -0.9375 z"
           id="path16344" />
        <path
           style="color:#000000;fill:#800000;stroke:none;-inkscape-stroke:none"
           d="m 203.66921,105.92383 h 4.69618 v -4.26721 h 2.48356 l 2.09974,4.26721 h 5.32836 l -3.20605,-5.17032 c 1.71591,-0.970844 2.66418,-2.686757 2.66418,-5.034849 0,-3.58987 -2.4384,-5.621872 -6.68303,-5.621872 h -7.38294 z m 4.69618,-7.879655 v -4.334938 h 2.68676 c 1.39982,0 2.21263,0.767645 2.21263,2.144891 0,1.422402 -0.81281,2.190047 -2.21263,2.190047 z"
           id="path16346" />
      </g>
      <g
         id="path16291">
        <path
           style="color:#000000;-inkscape-font-specification:'Trueno, Ultra-Bold';fill:#ffffff;stroke:none;-inkscape-stroke:none"
           d="m 218.28906,88.347656 v 19.326174 h 1.75 6.44531 V 88.347656 Z m 3.5,3.5 h 1.19531 v 12.326174 h -1.19531 z"
           id="path16350" />
        <path
           style="color:#000000;-inkscape-font-specification:'Trueno, Ultra-Bold';fill:#000000;stroke:none;-inkscape-stroke:none"
           d="m 220.03812,105.92383 h 4.69618 V 90.096789 h -4.69618 z"
           id="path16352" />
      </g>
      <g
         id="path16293">
        <path
           style="color:#000000;-inkscape-font-specification:'Trueno, Ultra-Bold';fill:#ffffff;stroke:none;-inkscape-stroke:none"
           d="m 225.12891,88.347656 v 7.15625 h 5.54492 l -5.81641,6.816404 v 5.35352 h 1.75 16.01953 v -7.1582 h -5.96484 l 5.80664,-6.792974 v -5.375 z m 3.5,3.5 h 10.33984 v 0.583985 l -9.9043,11.583989 h 10.0625 v 0.1582 h -10.76953 v -0.5625 l 9.90039,-11.607424 h -9.6289 z"
           id="path16356" />
        <path
           style="color:#000000;-inkscape-font-specification:'Trueno, Ultra-Bold';fill:#000000;stroke:none;-inkscape-stroke:none"
           d="m 226.60827,105.92383 h 14.26917 v -3.65761 h -8.01512 l 7.85707,-9.189161 v -2.98027 H 226.8792 v 3.657604 h 7.58614 l -7.85707,9.211747 z"
           id="path16358" />
      </g>
      <g
         id="path16295">
        <path
           style="color:#000000;-inkscape-font-specification:'Trueno, Ultra-Bold';fill:#ffffff;stroke:none;-inkscape-stroke:none"
           d="m 240.97852,88.347656 v 19.326174 h 1.75 14.91406 v -7.11328 h -0.99414 v -5.101566 h 0.76758 v -7.111328 z m 3.5,3.5 h 9.4375 v 0.111328 h -8.24024 v 5.984375 h 7.47266 v 0.111328 h -7.47266 v 6.005863 h 8.4668 v 0.11328 h -9.66406 z"
           id="path16362" />
        <path
           style="color:#000000;-inkscape-font-specification:'Trueno, Ultra-Bold';fill:#000000;stroke:none;-inkscape-stroke:none"
           d="m 242.72883,105.92383 h 13.16286 v -3.61245 h -8.46667 v -2.506137 h 7.47325 v -3.612448 h -7.47325 v -2.483558 h 8.24089 v -3.612448 h -12.93708 z"
           id="path16364" />
      </g>
      <g
         id="path16297">
        <path
           style="color:#000000;-inkscape-font-specification:'Trueno, Ultra-Bold';fill:#ffffff;stroke:none;-inkscape-stroke:none"
           d="m 256.40039,88.347656 v 19.326174 h 1.75 6.44531 v -3.54492 l 1.74414,3.54492 h 9.5625 l -4.04101,-6.51758 c 1.34505,-1.365108 2.10351,-3.297292 2.10351,-5.4375 0,-2.191159 -0.82363,-4.196281 -2.375,-5.498047 -1.55136,-1.301765 -3.65507,-1.873047 -6.05664,-1.873047 z m 3.5,3.5 h 5.63281 c 1.84306,0 3.07765,0.442987 3.80664,1.054688 0.72899,0.611701 1.125,1.417698 1.125,2.816406 0,1.876935 -0.58816,2.839996 -1.77539,3.511719 l -1.58593,0.896481 2.50976,4.04688 h -1.0957 l -2.09961,-4.26758 h -5.32227 v 4.26758 h -1.19531 z m 1.19531,0.111328 v 7.835938 h 1.75 2.6875 c 1.01981,0 2.08185,-0.306149 2.85352,-1.060547 0.77167,-0.754398 1.10742,-1.836327 1.10742,-2.880859 0,-1.032884 -0.34613,-2.107325 -1.11719,-2.84961 -0.77105,-0.742285 -1.82394,-1.044922 -2.84375,-1.044922 z m 3.5,3.5 h 0.9375 c 0.38002,0 0.43072,0.08056 0.41602,0.06641 -0.0147,-0.01415 0.0449,-0.01624 0.0449,0.328125 0,0.377867 -0.07,0.391928 -0.0547,0.376953 0.0153,-0.01498 -0.0262,0.06445 -0.40625,0.06445 h -0.9375 z"
           id="path16368" />
        <path
           style="color:#000000;-inkscape-font-specification:'Trueno, Ultra-Bold';fill:#000000;stroke:none;-inkscape-stroke:none"
           d="m 258.14949,105.92383 h 4.69618 v -4.26721 h 2.48356 l 2.09973,4.26721 h 5.32837 l -3.20605,-5.17032 c 1.71591,-0.970844 2.66418,-2.686757 2.66418,-5.034849 0,-3.58987 -2.4384,-5.621872 -6.68303,-5.621872 h -7.38294 z m 4.69618,-7.879655 v -4.334938 h 2.68676 c 1.39982,0 2.21262,0.767645 2.21262,2.144891 0,1.422402 -0.8128,2.190047 -2.21262,2.190047 z"
           id="path16370" />
      </g>
    </g>
  </g>
  <script
     id="mesh_polyfill"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script>
</svg>
